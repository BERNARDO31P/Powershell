<Window
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
	Name="MainWindow"
	Title="Examples"
    Height="800"
	Width="1200"
    Style="{DynamicResource MaterialDesignWindow}" 
	WindowStartupLocation="CenterScreen"
	ResizeMode="CanResize"
	TextElement.Foreground="{DynamicResource MaterialDesignBody}"
	TextElement.FontSize="14"
    TextElement.FontFamily="Roboto"
	TextOptions.TextFormattingMode="Ideal"
	TextOptions.TextRenderingMode="Auto"
	Background="{DynamicResource MaterialDesignPaper}" >

	<Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.BlueGrey.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.DeepOrange.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
			<RowDefinition Height="*" />
			<RowDefinition Height="90" />
		</Grid.RowDefinitions>
        <StackPanel Grid.Row="1" >
            
        </StackPanel>
        <materialDesign:Card Name="Services_Card" Grid.Row="0" Background="{DynamicResource PrimaryHueLightBrush}" 
                 Foreground="{DynamicResource PrimaryHueLightForegroundBrush}" Width="1100" Padding="30" Margin="20">
                <DataGrid   Name="Services_DataGrid" AutoGenerateColumns="False" SelectionUnit="FullRow" CanUserAddRows = "False" IsReadOnly = "True"
                            GridLinesVisibility = "Horizontal" CanUserReorderColumns = "True"
                            materialDesign:DataGridAssist.CellPadding="10,5,10,5" materialDesign:DataGridAssist.ColumnHeaderPadding="10,5,10,5">
                    <DataGrid.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource MaterialDesignDataGridCell}">
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="BorderThickness" Value="0"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.CellStyle>
                    <DataGrid.Columns>
                        <DataGridCheckBoxColumn Binding="{Binding Path=CheckboxChecked,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" CanUserResize="False" IsReadOnly = "False">
                            <DataGridCheckBoxColumn.ElementStyle>
                                <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}" />
                            </DataGridCheckBoxColumn.ElementStyle>
                            <DataGridCheckBoxColumn.Header>
                                <CheckBox Name="Services_HeaderChkBox" />
                            </DataGridCheckBoxColumn.Header>
                        </DataGridCheckBoxColumn>
                        <DataGridTextColumn Binding="{Binding Name}" >
                            <DataGridTextColumn.Header>
                                <TextBlock Text="Name" FontSize="18" />
                            </DataGridTextColumn.Header>
                        </DataGridTextColumn>
                        <DataGridTextColumn Width = "500" Binding="{Binding Description}" >
                            <DataGridTextColumn.Header>
                                <TextBlock Text="Description" FontSize="18" />
                            </DataGridTextColumn.Header>
                        </DataGridTextColumn>
                        <DataGridTextColumn  Binding="{Binding State}" >
                            <DataGridTextColumn.Header>
                                <TextBlock Text="Status" FontSize="18" />
                            </DataGridTextColumn.Header>
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <Trigger Property="Text" Value="Stopped">
                                            <Setter Property="Foreground" Value="Red" />
                                        </Trigger>
                                        <Trigger Property="Text" Value="Running">
                                            <Setter Property="Foreground" Value="Green" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
							</DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn  Binding="{Binding StartMode}" >
                            <DataGridTextColumn.Header>
                                <TextBlock Text="Start Mode" FontSize="18" />
                            </DataGridTextColumn.Header>
                        </DataGridTextColumn>
                        <DataGridTemplateColumn CanUserResize="False" >
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button x:Name="HiddenDeleteButton" Visibility="Hidden" Style="{StaticResource MaterialDesignFloatingActionMiniButton}" >
                                    <Button.LayoutTransform>
                                        <ScaleTransform  ScaleX="0.7" ScaleY="0.7"/>
                                    </Button.LayoutTransform>
                                        <materialDesign:PackIcon Kind="FolderOpenOutline" Height="25" Width="25" />
                                    </Button>
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType=DataGridRow}}" Value="True">
                                            <Setter Property="Visibility" TargetName="HiddenDeleteButton" Value="Visible"/>
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn CanUserResize="False" materialDesign:DataGridAssist.CellPadding="5">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Button x:Name="HiddenInsertButton" Visibility="Hidden" Style="{StaticResource MaterialDesignFloatingActionMiniButton}" >
                                    <Button.LayoutTransform>
                                        <ScaleTransform  ScaleX="0.7" ScaleY="0.7"/>
                                    </Button.LayoutTransform>
                                        <materialDesign:PackIcon Kind="Eye" Height="25" Width="25" />
                                    </Button>
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType=DataGridRow}}" Value="True">
                                            <Setter Property="Visibility" TargetName="HiddenInsertButton" Value="Visible"/>
                                        </DataTrigger>
                                         <DataTrigger Binding="{Binding Path=IsPressed}" Value="True">
                                            <Setter Property="ToolTip" TargetName="HiddenInsertButton" Value="xxxxx"/>
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
        </materialDesign:Card>
    </Grid>


</Window>